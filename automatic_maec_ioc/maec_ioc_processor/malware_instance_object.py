'''
@author: george
'''
from cybox.core import Object as OB
from cybox.objects.file_object import File

from maec.utils.idgen import IDGenerator
from maec.utils.nsparser import Namespace
from cybox.common.vocabs import register_vocab
register_vocab()


class MalwareInstanceObject(OB):
    '''
    classdocs
    '''


    def __init__(self, typeObject=File(),idref='',namespace='',prefix=''):

        self.properties = typeObject
        self.idgen = IDGenerator()
        #Define Attributes 
        #Define id or idref
        if idref=='':
            self.setId(namespace=namespace, prefix_=prefix)
        else:
            self.idref =idref
        #define has_changed
        self.has_changed =False
        
        
        
    def setId(self,namespace='',prefix_='bundle'):
        '''
        The given namespace should be had the form xmlns:prefix="URI"
        '''
        if namespace =='' :
            self.id_= self.idgen.create_id(prefix=prefix_)
        else :
            mixedname =''.join(namespace.split(':')[1:])
            name = mixedname.split('=')[1]
            px=mixedname.split('=')[0]
            ns = Namespace(name=name,prefix=px)
            self.idgen._namespace=ns
            self.id_ = self.idgen.create_id(prefix=prefix_) 
    
    def hasChanged(self,changed=False):
        self.has_changed =changed        
        
    def setState(self,state):
        self.state =state
        
    def setDescription(self,description):
        self.description = str(description)
    
    def setProperties(self):
        pass
    
       
if __name__=='__main__':
    mi = MalwareInstanceObject()
    print(mi.properties)
   
    
    
    