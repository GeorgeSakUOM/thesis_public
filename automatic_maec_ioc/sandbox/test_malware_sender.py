__author__ = 'george'
import hashlib,time,socket,ssl,pprint
from ast import  literal_eval

CERTIFICATE = '/home/george/PycharmProjects/thesis_public/automatic_maec_ioc/server/server_certificate/iocserver.pem'
CERTIFICATECA = 'server_certificates/cacert.pem'
KEYFILE = '/home/george/PycharmProjects/thesis_public/automatic_maec_ioc/server/server_certificate/iocserver.key'
serveraddress=('localhost',5000)
task_id=1
if __name__=='__main__':
    filename='test1.bin'
    malware = open('test1.bin','rb').read()

    hashtag=hashlib.sha1(malware).hexdigest()
    print(hashtag)
    length =len(bytes(malware))
    print(length)

    sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    ssl_sock = ssl.wrap_socket(sock=sock,ca_certs=CERTIFICATECA,certfile=CERTIFICATE,keyfile=KEYFILE,cert_reqs=ssl.CERT_REQUIRED)
    ssl_sock.connect(serveraddress)
    print repr(ssl_sock.getpeername())
    print ssl_sock.cipher()
    print pprint.pformat(ssl_sock.getpeercert())
    print("Sending identity")
    ssl_sock.send(str((task_id,filename,'checksum',hashtag,length)))
    data = ssl_sock.recv()
    print(data)
    if data=='ready':
        ssl_sock.sendall(malware)
        data = ssl_sock.recv()
        print(data)
        data = ssl_sock.recv()
        print(data)
    ssl_sock.close()
    time.sleep(10)
